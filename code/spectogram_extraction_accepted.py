# -*- coding: utf-8 -*-
"""Spectogram_Extraction_Noisy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WvV2d8T7J0GGbb4yLR01zp692SVztEzY
"""

import numpy as np
import pandas as pd
import requests
import subprocess
import os
import matplotlib.pyplot as plt

#for loading and visualizing audio files
import librosa
import librosa.display

#to play audio
import IPython.display as ipd

from tqdm import tqdm

data_path = "../data/"
noisy = pd.read_excel(data_path+"accepted.xlsx")


for index,rows in tqdm(noisy.iterrows()):
    if index > 7000:        
        try:
            url = rows[4]
            url_id = url[(url.rindex('/')+1):-4]
            audio = requests.get(url)
            path = "../data/wave_files_accepted/"
            filename = path+url_id + ".mp3"
            filename_wave = path+url_id+".wav"
            file = open(filename, 'wb')
            file.write(audio.content)
            file.close()
            subprocess.call(['ffmpeg', '-i',filename,filename_wave],stdout=subprocess.DEVNULL,stderr=subprocess.STDOUT)
            os.remove(filename)

            
            image_path_colorbar = "../data/accepted/colorbar/"
            image_path_simple = "../data/accepted/simple/"


            x,sr = librosa.load(filename_wave, sr=44100)
            S = librosa.feature.melspectrogram(x, sr=sr, n_mels=128,fmax=8000)
            os.remove(filename_wave)
            
            plt.figure(figsize=(14,5))
            S_dB = librosa.power_to_db(S, ref=np.max)
            librosa.display.specshow(S_dB, x_axis='time',y_axis='mel', sr=sr,fmax=8000)
            plt.colorbar()
            plt.savefig(image_path_colorbar+url_id,pad_inches = 0,bbox_inches='tight')

            plt.figure(figsize=(8, 5),frameon=False)
            plt.axis("off")
            S_dB = librosa.power_to_db(S, ref=np.max)
            librosa.display.specshow(S_dB, sr=sr,fmax=8000)
            plt.plot()
            plt.savefig(image_path_simple+url_id,pad_inches = 0,bbox_inches='tight')

            plt.close("all")
        except:
            print("Error: %f" % index)